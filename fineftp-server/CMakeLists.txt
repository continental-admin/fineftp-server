set(CMAKE_POSITION_INDEPENDENT_CODE ON)
set(CMAKE_CXX_VISIBILITY_PRESET hidden)
set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)

find_package(Threads REQUIRED)
find_package(asio REQUIRED)

include(GenerateExportHeader)

# Public API include directory
set (includes
    include/fineftp/server.h
    include/fineftp/permissions.h
)

# Private source files
set(sources
    src/filesystem.cpp
    src/filesystem.h
    src/ftp_message.h
    src/ftp_session.cpp
    src/ftp_session.h
    src/ftp_user.h
    src/server.cpp
    src/server_impl.cpp
    src/server_impl.h
    src/user_database.cpp
    src/user_database.h
)


add_library (fineftp-server
    ${includes}
    ${sources}
)

generate_export_header(fineftp-server
  EXPORT_FILE_NAME ${PROJECT_BINARY_DIR}/fineftp_export.h
  BASE_NAME FINEFTP
)

add_library (fineftp::server ALIAS fineftp-server)


target_link_libraries(fineftp-server
    PRIVATE
        Threads::Threads
        $<$<BOOL:${WIN32}>:ws2_32>
        $<$<BOOL:${WIN32}>:wsock32>
)

# Link asio as described in this workaround: https://gitlab.kitware.com/cmake/cmake/-/issues/15415#note_633938
target_link_libraries     (fineftp-server PRIVATE $<BUILD_INTERFACE:asio::asio>)

target_compile_definitions(fineftp-server
    PRIVATE
        ASIO_STANDALONE
        ASIO_DISABLE_VISIBILITY
        __USE_FILE_OFFSET64=1
        _WIN32_WINNT=0x0601
)

target_compile_options(fineftp-server PRIVATE
                           $<$<OR:$<CXX_COMPILER_ID:Clang>,$<CXX_COMPILER_ID:AppleClang>,$<CXX_COMPILER_ID:GNU>>:
                                -Wall -Wextra>
                           $<$<CXX_COMPILER_ID:MSVC>:
                                /W4>)


# Add own public include directory
target_include_directories(fineftp-server
  PUBLIC 
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
  PRIVATE
    $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}>          # To find the export file generated by generate_export_header
)

target_include_directories(fineftp-server PRIVATE src)

set_target_properties(fineftp-server PROPERTIES
    VERSION ${PROJECT_VERSION}
    SOVERSION ${PROJECT_VERSION_MAJOR}
    OUTPUT_NAME fineftp-server
)

##################################

if (MSVC)
    # Mirror the folder structure with Visual Studio filters
    include(../msvc_sourcetree.cmake)
    msvc_source_tree(${includes} ${sources})
endif()

##################################

set(FINEFTP_INSTALL_CMAKE_DIR "lib/cmake/fineftp")

install(
  TARGETS fineftp-server
  EXPORT fineftpTargets 
  LIBRARY DESTINATION "lib" 
  ARCHIVE DESTINATION "lib"   
)

install(DIRECTORY "include/fineftp" DESTINATION "include" FILES_MATCHING PATTERN "*.h")
install(FILES ${PROJECT_BINARY_DIR}/fineftp_export.h
  DESTINATION include/fineftp)

install(
  EXPORT fineftpTargets 
  FILE fineftpTargets.cmake 
  DESTINATION ${FINEFTP_INSTALL_CMAKE_DIR}
  NAMESPACE fineftp::
)

include(CMakePackageConfigHelpers)

configure_package_config_file(
  "../cmake/fineftpConfig.cmake.in"
  "${CMAKE_CURRENT_BINARY_DIR}/cmake/fineftpConfig.cmake"
  INSTALL_DESTINATION ${FINEFTP_INSTALL_CMAKE_DIR}
  PATH_VARS FINEFTP_INSTALL_CMAKE_DIR
)
install(FILES "${CMAKE_CURRENT_BINARY_DIR}/cmake/fineftpConfig.cmake" DESTINATION ${FINEFTP_INSTALL_CMAKE_DIR})

